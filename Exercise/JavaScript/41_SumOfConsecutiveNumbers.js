/*
41. 연속된 자연수의 합
입력으로 양의 정수 N이 입력되면 2개 이상의 연속된 자연수의 합으로 정수 N을 표현하는 방
법의 가짓수를 출력하는 프로그램을 작성하세요.
만약 N=15이면 
7+8=15
4+5+6=15
1+2+3+4+5=15
와 같이 총 3가지의 경우가 존재한다.
▣ 입력설명
첫 번째 줄에 양의 정수 N(7<=N<1000)이 주어진다.
▣ 출력설명
첫줄부터 각각의 경우의 수를 출력한다.
맨 마지막 줄에 총 개수를 출력한다.
▣ 입력예제 1 
15
▣ 출력예제 1
7 + 8 = 15
4 + 5 + 6 = 15
1 + 2 + 3 + 4 + 5 = 15
3
*/

const x = 15;
// const x = 450;

function solution(x) {
    /*
    연소된 숫자의 합은 15가 되야 되므로 
    숫자를 n으로 치면 연속될 숫자는 +1이다.

    #2개 숫자가 연속일 때 
    n + (n+1) = 15
    2n + 1 = 15
    2n = 15 - 1
    n = 7
    **7 + 8 = 15

    #3개 숫자가 연속일 때 
    n + (n+1) + (n+2) = 15
    3n + 3 = 15
    3n = 15 - 3
    n = 4
    **4 + 5 + 6 = 15

    #4개 숫자가 연속일 때 
    n + (n+1) + (n+2) + (n+3) = 15
    4n + 6 = 15
    4n = 9
    n = 안 나눠 지므로 4개의 숫자로 덧셈이 안된다.

    #5개 숫자가 연속일 때 
    n + (n+1) + (n+2) + (n+3) + (n+4) = 15
    5n + 10 = 15
    5n = 15-10
    n = 1
    ** 1 + 2 + 3 + 4 + 5 = 15

    #6개 숫자가 연속일 때 
    n + (n+1) + (n+2) + (n+3) + (n+4) + (n+5) = 15
    6n + 15 = 15
    6n = 15 - 15
    n = 0 / 6
    0나누기니까 0이 나오므로 while loop이 멈춘다.
    */
    let cnt = 0,
        i = 2;
    while (1) {
        let consecutiveSum = 0;
        for (let j = 1; j < i; j++) {
            consecutiveSum += j;
        }
        let n = Math.floor((x - consecutiveSum) / i);
        if (n < 1) {
            break;
        }
        if ((x - consecutiveSum) % i === 0) {
            cnt++;
            // console로 과정 출력
            let str = `${n} `;
            for (let j = 1; j < i; j++) {
                str += `+ ${n+j} `;
            }
            str += `= ${x}`
            console.log(str);
        }
        i++;
    }
    return cnt;
}

let answer = solution(x);

$('#header')
    .html("<p>" + answer + "</p>")


console.log(`답은: ${answer}`);